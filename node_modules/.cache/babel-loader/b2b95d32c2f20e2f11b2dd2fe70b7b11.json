{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nimport { useListItem } from '../useList';\nimport useButton from '../useButton';\n\nfunction tabValueGenerator(otherTabValues) {\n  return otherTabValues.size;\n}\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base/react-tabs/hooks-api/#use-tab)\n */\n\n\nfunction useTab(parameters) {\n  const {\n    value: valueParam,\n    rootRef: externalRef,\n    disabled = false,\n    id: idParam\n  } = parameters;\n  const tabRef = React.useRef(null);\n  const id = useId(idParam);\n  const {\n    value: selectedValue,\n    selectionFollowsFocus,\n    getTabPanelId\n  } = useTabsContext();\n  const tabMetadata = React.useMemo(() => ({\n    disabled,\n    ref: tabRef,\n    id\n  }), [disabled, tabRef, id]);\n  const {\n    id: value,\n    index,\n    totalItemCount: totalTabsCount\n  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);\n  const {\n    getRootProps: getTabProps,\n    rootRef: listItemRefHandler,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const {\n    getRootProps: getButtonProps,\n    rootRef: buttonRefHandler,\n    active,\n    focusVisible,\n    setFocusVisible\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: !selectionFollowsFocus,\n    type: 'button'\n  });\n  const handleRef = useForkRef(tabRef, externalRef, listItemRefHandler, buttonRefHandler);\n  const tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\n\n  const getRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    const resolvedTabProps = _extends({}, otherHandlers, getTabProps(otherHandlers));\n\n    const resolvedButtonProps = _extends({}, resolvedTabProps, getButtonProps(resolvedTabProps));\n\n    return _extends({}, resolvedButtonProps, {\n      role: 'tab',\n      'aria-controls': tabPanelId,\n      'aria-selected': selected,\n      id,\n      ref: handleRef\n    });\n  };\n\n  return {\n    getRootProps,\n    active,\n    focusVisible,\n    highlighted,\n    index,\n    rootRef: handleRef,\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\n    selected: selected || value === selectedValue,\n    setFocusVisible,\n    totalTabsCount\n  };\n}\n\nexport default useTab;","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","useTabsContext","useCompoundItem","useListItem","useButton","tabValueGenerator","otherTabValues","size","useTab","parameters","value","valueParam","rootRef","externalRef","disabled","id","idParam","tabRef","useRef","selectedValue","selectionFollowsFocus","getTabPanelId","tabMetadata","useMemo","ref","index","totalItemCount","totalTabsCount","getRootProps","getTabProps","listItemRefHandler","highlighted","selected","item","getButtonProps","buttonRefHandler","active","focusVisible","setFocusVisible","focusableWhenDisabled","type","handleRef","tabPanelId","undefined","otherHandlers","resolvedTabProps","resolvedButtonProps","role"],"sources":["/Users/aorlanes/Desktop/projects/vera-sons/Vera-Sons/node_modules/@mui/base/useTab/useTab.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nimport { useListItem } from '../useList';\nimport useButton from '../useButton';\nfunction tabValueGenerator(otherTabValues) {\n  return otherTabValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base/react-tabs/hooks-api/#use-tab)\n */\nfunction useTab(parameters) {\n  const {\n    value: valueParam,\n    rootRef: externalRef,\n    disabled = false,\n    id: idParam\n  } = parameters;\n  const tabRef = React.useRef(null);\n  const id = useId(idParam);\n  const {\n    value: selectedValue,\n    selectionFollowsFocus,\n    getTabPanelId\n  } = useTabsContext();\n  const tabMetadata = React.useMemo(() => ({\n    disabled,\n    ref: tabRef,\n    id\n  }), [disabled, tabRef, id]);\n  const {\n    id: value,\n    index,\n    totalItemCount: totalTabsCount\n  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);\n  const {\n    getRootProps: getTabProps,\n    rootRef: listItemRefHandler,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const {\n    getRootProps: getButtonProps,\n    rootRef: buttonRefHandler,\n    active,\n    focusVisible,\n    setFocusVisible\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: !selectionFollowsFocus,\n    type: 'button'\n  });\n  const handleRef = useForkRef(tabRef, externalRef, listItemRefHandler, buttonRefHandler);\n  const tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\n  const getRootProps = (otherHandlers = {}) => {\n    const resolvedTabProps = _extends({}, otherHandlers, getTabProps(otherHandlers));\n    const resolvedButtonProps = _extends({}, resolvedTabProps, getButtonProps(resolvedTabProps));\n    return _extends({}, resolvedButtonProps, {\n      role: 'tab',\n      'aria-controls': tabPanelId,\n      'aria-selected': selected,\n      id,\n      ref: handleRef\n    });\n  };\n  return {\n    getRootProps,\n    active,\n    focusVisible,\n    highlighted,\n    index,\n    rootRef: handleRef,\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\n    selected: selected || value === selectedValue,\n    setFocusVisible,\n    totalTabsCount\n  };\n}\nexport default useTab;"],"mappings":"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"},"metadata":{},"sourceType":"module"}